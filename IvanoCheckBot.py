import asyncio
import os

from dotenv import load_dotenv
from telebot.async_telebot import AsyncTeleBot, telebot

from get_api_data import check_currency_sharaf, check_official_currency

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

api_url = os.getenv("OFFICIAL_API_URL")
sharaf_api_url = os.getenv("SHARAF_API_URL")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN_TEST2")

if TELEGRAM_TOKEN is None:
    raise ValueError("TELEGRAM_TOKEN can not be None")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
bot = AsyncTeleBot(TELEGRAM_TOKEN)


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def create_markup():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(telebot.types.KeyboardButton("–û—Ñ. –∫—É—Ä—Å USD/AED"))
    markup.add(telebot.types.KeyboardButton("–û—Ñ. –∫—É—Ä—Å EUR/AED"))
    markup.add(telebot.types.KeyboardButton("–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞ USD/AED"))
    markup.add(telebot.types.KeyboardButton("–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞ EUR/AED"))
    return markup


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help
@bot.message_handler(commands=["start", "help"])
async def send_welcome(message):
    await bot.send_message(
        message.chat.id,
        (
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—É—Ä—Å –î–∏—Ä—Ö–∞–º–∞ –û–ê–≠.\n"
            "–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –≤–∑—è—Ç—ã –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞ <a href='https://sharafexchange.ae/'>Sharaf Exchange</a>.\n"
            "–ü–æ–∫–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Ç–æ–ª—å–∫–æ –∫—É—Ä—Å AED –∫ USD –∏ EUR.\n"
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá\n\n"
            "–î–ª—è —Å–≤—è–∑–∏ @pashigin"
        ),
        parse_mode="HTML",
        disable_web_page_preview=True,
        reply_markup=create_markup(),
    )


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã USD
@bot.message_handler(func=lambda message: message.text == "–û—Ñ. –∫—É—Ä—Å USD/AED")
async def check_usd_currency(message):
    result = await check_official_currency("USD")
    await bot.send_message(message.chat.id, result, parse_mode="HTML")


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã EUR
@bot.message_handler(func=lambda message: message.text == "–û—Ñ. –∫—É—Ä—Å EUR/AED")
async def check_eur_currency(message):
    result = await check_official_currency("EUR")
    await bot.send_message(message.chat.id, result, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞ USD/AED")
async def check_usd_currency_sharaf(message):
    result = await check_currency_sharaf("USD")
    await bot.send_message(message.chat.id, result, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞ EUR/AED")
async def check_eur_currency_sharaf(message):
    result = await check_currency_sharaf("EUR")
    await bot.send_message(message.chat.id, result, parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
async def echo_all(message):
    await bot.send_message(
        message.chat.id,
        text="–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(bot.polling())
