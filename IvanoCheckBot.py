import asyncio
import os
from functools import partial

from dotenv import load_dotenv
from telebot.async_telebot import AsyncTeleBot, telebot

from get_api_data import check_currency_sharaf, check_official_currency

load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if TELEGRAM_TOKEN is None:
    raise ValueError("TELEGRAM_TOKEN can not be None")

bot = AsyncTeleBot(TELEGRAM_TOKEN)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def create_markup():
    return telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
        "USD ‚Üí AED",
        "EUR ‚Üí AED",
        "–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞\nUSD ‚Üí AED",
        "–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞\nEUR ‚Üí AED",
        "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª—é–±—É—é –≤–∞–ª—é—Ç—É",
        "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –æ–±–º–µ–Ω–Ω–∏–∫–µ ‚Üí AED",
    )


# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.message_handler(commands=["start", "help"])
async def send_welcome(message):
    name = message.from_user.first_name or "–î—Ä—É–≥"
    await bot.send_message(
        message.chat.id,
        (
            f"–ü—Ä–∏–≤–µ—Ç, {name}! üëã\n\n"
            "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—É—Ä—Å –¥–∏—Ä—Ö–∞–º–∞ –û–ê–≠ üá¶üá™\n"
            "–î–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏ <a href='https://sharafexchange.ae'>Sharaf Exchange</a> üí∞\n"
            "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∏–∂–µ üëá\n\n"
            "–î–ª—è —Å–≤—è–∑–∏: @pashigin"
        ),
        parse_mode="HTML",
        disable_web_page_preview=True,
        reply_markup=create_markup(),
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
button_handlers = {
    "USD ‚Üí AED": partial(check_official_currency, "USD"),
    "EUR ‚Üí AED": partial(check_official_currency, "EUR"),
    "–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞\nUSD ‚Üí AED": partial(check_currency_sharaf, "USD"),
    "–ö—É—Ä—Å –æ–±–º–µ–Ω–Ω–∏–∫–∞\nEUR ‚Üí AED": partial(check_currency_sharaf, "EUR"),
}


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏
@bot.message_handler(func=lambda msg: msg.text in button_handlers)
async def handle_currency_buttons(message):
    result = await button_handlers[message.text]()
    await bot.send_message(message.chat.id, result, parse_mode="HTML")


# –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –æ—Ñ –≤–∞–ª—é—Ç—ã
@bot.message_handler(func=lambda msg: msg.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª—é–±—É—é –≤–∞–ª—é—Ç—É")
async def start_custom_currency_check(message):
    user_states[message.from_user.id] = {"step": "base"}
    await bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –±–∞–∑–æ–≤—É—é –≤–∞–ª—é—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, USD):")


# –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –≤–∞–ª—é—Ç—ã –∫ –¥–∏—Ä—Ö–∞–º—É –≤ –æ–±–º–µ–Ω–Ω–∏–∫–∞
@bot.message_handler(func=lambda msg: msg.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –æ–±–º–µ–Ω–Ω–∏–∫–µ ‚Üí AED")
async def ask_sharaf_currency(message):
    user_states[message.from_user.id] = {"step": "custom_sharaf"}
    await bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –≤–∞–ª—é—Ç—É –∫ –¥–∏—Ä—Ö–∞–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, USD):")


@bot.message_handler(func=lambda msg: msg.from_user.id in user_states)
async def handle_states(message):
    user_id = message.from_user.id
    state = user_states[user_id]
    text = message.text.strip().upper()

    if len(text) != 3 or not text.isalpha():
        await bot.send_message(
            message.chat.id, "–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–¥ –≤–∞–ª—é—Ç—ã (3 –±—É–∫–≤—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, USD)."
        )
        return

    step = state["step"]

    if step == "base":
        state.update({"step": "target", "base": text})
        await bot.send_message(
            message.chat.id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Ü–µ–ª–µ–≤—É—é –≤–∞–ª—é—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, AED):"
        )

    elif step == "target":
        base = state["base"]
        target = text
        del user_states[user_id]
        result = await check_official_currency(base, target)
        await bot.send_message(message.chat.id, result, parse_mode="HTML")

    elif step == "custom_sharaf":
        del user_states[user_id]
        result = await check_currency_sharaf(text)
        await bot.send_message(message.chat.id, result, parse_mode="HTML")


# –û—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@bot.message_handler(func=lambda msg: True)
async def echo_all(message):
    await bot.send_message(
        message.chat.id,
        "–ü—Ä–æ—Å—Ç–∏, –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é üëá",
        reply_markup=create_markup(),
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(bot.polling())
